services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    environment:
      - CONFIG_PATH=/app/configs/config.docker.yaml
      - STORAGE_PASSWORD=$STORAGE_PASSWORD
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - SMTP_PASSWORD=$SMTP_PASSWORD
      - TZ=UTC
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - mailhog
    volumes:
      - $CONFIG_PATH_DOCKER:/app/configs/config.docker.yaml

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-calendar} || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s
    restart: unless-stopped
  
  migrator:
    image: migrate/migrate:v4.17.1
    container_name: migrator
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./docker/postgres:/migrations:ro
    command:
      - -path=/migrations
      - -database
      - postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB?sslmode=disable
      - up

  redis:
    image: redis:7-alpine
    environment:
      - REDIS_PASSWORD=$REDIS_PASSWORD
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "$REDIS_PASSWORD"]
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $REDIS_PASSWORD ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 30

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web UI
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:


