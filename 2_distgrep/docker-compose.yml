services:
  server1:
    image: golang:1.25.0-alpine
    container_name: server1
    working_dir: /app/server
    volumes:
      - ./:/app:ro
    command: sh -c "go run ./cmd/app -port=8081"
    ports:
      - "8081:8081"
    restart: unless-stopped

  server2:
    image: golang:1.25.0-alpine
    container_name: server2
    working_dir: /app/server
    volumes:
      - ./:/app:ro
    command: sh -c "go run ./cmd/app -port=8082"
    ports:
      - "8082:8082"
    restart: unless-stopped

  server3:
    image: golang:1.25.0-alpine
    container_name: server3
    working_dir: /app/server
    volumes:
      - ./:/app:ro
    command: sh -c "go run ./cmd/app -port=8083"
    ports:
      - "8083:8083"
    restart: unless-stopped

  client:
    image: golang:1.25.0-alpine
    container_name: client
    working_dir: /app/client
    volumes:
      - ./:/app:ro
      - data:/data
    depends_on:
      - server1
      - server2
      - server3
    command: sh -c "sleep 1; printf 'alpha\nbeta\nfoo\nfoo bar\n' > /data/input.txt; go run ./cmd/app --addrs server1:8081,server2:8082,server3:8083 -n foo /data/input.txt"
    profiles:
      - demo

volumes:
  data:
  